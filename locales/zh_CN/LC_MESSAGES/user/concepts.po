# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, 2013, Steve Canny
# This file is distributed under the same license as the python-pptx
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: python-pptx 0.6.21\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-29 20:05+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../user/concepts.rst:2
msgid "Concepts"
msgstr ""

#: ../../user/concepts.rst:4
msgid ""
"|pp| is completely object-oriented, and in general any operations you "
"perform with it will be on an object. The root object for a presentation "
"is |Presentation|. API details are provided on the modules pages, but "
"here are some basics to get you started, especially some relationships "
"you might find surprising at first."
msgstr ""

#: ../../user/concepts.rst:10
msgid ""
"A presentation is loaded by constructing a new |Presentation| instance, "
"passing in the path to a presentation to be loaded::"
msgstr ""

#: ../../user/concepts.rst:18
msgid ""
"|pp| also contains a default template, and if you construct a "
"|Presentation| instance without a path, a presentation based on that "
"default template is loaded. This can be handy when you want to get "
"started quickly, and most of the examples in this documentation use the "
"default template.::"
msgstr ""

#: ../../user/concepts.rst:26
msgid ""
"Note that there is currently no distinction between templates and "
"presentations in |pp| as there is in the PowerPointÂ® client, there are "
"only presentations. To use a \"template\" for a presentation you simply "
"create a presentation with all the styles, logo, and layouts you want, "
"delete all the slides (or leave some in if it suits), and then load that "
"as your starting place."
msgstr ""

#: ../../user/concepts.rst:34
msgid "Slide masters"
msgstr ""

#: ../../user/concepts.rst:36
msgid ""
"A presentation has a list of slide masters and a list of slides. Let's "
"start with a discussion of the slide masters."
msgstr ""

#: ../../user/concepts.rst:39
#, python-format
msgid ""
"One fact some find surprising (I did) is that a presentation file can "
"have more than one slide master. It's quite uncommon in my experience to "
"find presentations that make use of this feature, but it's entirely "
"supported. The only time I've seen this happen is when slides from a "
"\"foreign\" presentation are pasted into another deck; if you want the "
"formatting and backgrounds from the other deck to be preserved on the "
"pasted-in slides, the slide master and its slide layouts need to come "
"with. Consequently, the presentation needs to maintain a list of slide "
"masters, not just a single one, even though perhaps 99% of the time you "
"only ever use the one. To make things a little easier for the 99% "
"situation, you can refer to the first slide master as though it were the "
"only one::"
msgstr ""

#: ../../user/concepts.rst:58
msgid "Slide layouts"
msgstr ""

#: ../../user/concepts.rst:60
#, python-format
msgid ""
"Another fact that might be surprising is that slide layouts belong to a "
"slide master, not directly to a presentation, so normally you have to "
"access the slide layouts via their slide master. Since this is subject to"
" the same 99% situation described above, the slide layouts belonging to "
"the first slide master can also be accessed directly from the "
"presentation via syntactic sugar::"
msgstr ""

#: ../../user/concepts.rst:74
msgid "Slides"
msgstr ""

#: ../../user/concepts.rst:76
msgid ""
"The slides in a presentation belong to the presentation object and are "
"accessed using the ``slides`` attribute::"
msgstr ""

#: ../../user/concepts.rst:84
msgid "Adding a slide"
msgstr ""

#: ../../user/concepts.rst:86
msgid ""
"Adding a slide is accomplished by calling the :meth:`add_slide` method on"
" the :attr:`slides` attribute of the presentation. A slide layout must be"
" passed in to specify the layout the new slide should take on::"
msgstr ""

