# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, 2013, Steve Canny
# This file is distributed under the same license as the python-pptx
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: python-pptx 0.6.21\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-29 20:05+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../user/placeholders-using.rst:4
msgid "Working with placeholders"
msgstr "使用占位符"

#: ../../user/placeholders-using.rst:6
msgid ""
"Placeholders can make adding content a lot easier. If you've ever added a"
" new textbox to a slide from scratch and noticed how many adjustments it "
"took to get it the way you wanted you understand why. The placeholder is "
"in the right position with the right font size, paragraph alignment, "
"bullet style, etc., etc. Basically you can just click and type in some "
"text and you've got a slide."
msgstr ""
"占位符可以让添加内容变得更容易。"
"如果你曾经从零开始在幻灯片上添加新的文本框，并注意到它需要多少调整才能达到你想要的效果，你就会明白为什么。"
"占位符位于合适的位置，具有合适的字体大小、段落对齐方式、项目符号样式等。"
"基本上，你只需点击并输入一些文本，就能得到一张幻灯片。"

#: ../../user/placeholders-using.rst:13
msgid ""
"A placeholder can be also be used to place a rich-content object on a "
"slide. A picture, table, or chart can each be inserted into a placeholder"
" and so take on the position and size of the placeholder, as well as "
"certain of its formatting attributes."
msgstr ""
"占位符还可以用来在幻灯片上放置富内容对象。可以将图片、表格或图表分别插入到占位符中，从而获得占位符的位置和大小，以及某些格式属性。"

#: ../../user/placeholders-using.rst:20
msgid "Access a placeholder"
msgstr "访问占位符"

#: ../../user/placeholders-using.rst:22
msgid ""
"Every placeholder is also a shape, and so can be accessed using the "
":attr:`~.Slide.shapes` property of a slide. However, when looking for a "
"particular placeholder, the :attr:`~.Slide.placeholders` property can "
"make things easier."
msgstr ""
"每个占位符也是形状，所以可以使用幻灯片的 :attr:`~.Slide.shapes` 来访问。"
"但是，当查找特定的占位符时，:attr:`~.Slide.placeholders` 属性可以让事情变得更简单。"

#: ../../user/placeholders-using.rst:27
msgid ""
"The most reliable way to access a known placeholder is by its "
":attr:`~.PlaceholderFormat.idx` value. The :attr:`idx` value of a "
"placeholder is the integer key of the slide layout placeholder it "
"inherits properties from. As such, it remains stable throughout the life "
"of the slide and will be the same for any slide created using that "
"layout."
msgstr ""
"“访问已知占位符的最可靠的方法是通过它的 :attr:`~.PlaceholderFormat.idx` 的值。占位符的 :attr:`idx` 值是它继承属性的幻灯片布局占位符的整数键。"
"因此，它在整个幻灯片的生命周期中都保持稳定，对于使用这种布局创建的任何幻灯片都是一样的。"

#: ../../user/placeholders-using.rst:33
msgid ""
"It's usually easy enough to take a look at the placeholders on a slide "
"and pick out the one you want::"
msgstr ""
"通常很容易看一看幻灯片上的占位符，然后挑出你想要的::"

#: ../../user/placeholders-using.rst:45
msgid "... then, having the known index in hand, to access it directly::"
msgstr "... 然后，手里有了已知的索引，可以直接访问它::"

#: ../../user/placeholders-using.rst:52
msgid ""
"Item access on the placeholders collection is like that of a dictionary "
"rather than a list. While the key used above is an integer, the lookup is"
" on `idx` values, not position in a sequence. If the provided value does "
"not match the `idx` value of one of the placeholders, |KeyError| will be "
"raised. `idx` values are not necessarily contiguous."
msgstr ""
"占位符集合上的项访问类似于字典而不是列表。"
"虽然上面使用的键是整数，但查找的是 ``idx`` 值，而不是序列中的位置。"
"如果提供的值与其中占位符的 ``idx`` 值不匹配，则会引发 |KeyError|。``idx`` 值不一定是连续的。"

#: ../../user/placeholders-using.rst:58
msgid ""
"In general, the :attr:`idx` value of a placeholder from a built-in slide "
"layout (one provided with PowerPoint) will be between 0 and 5. The title "
"placeholder will always have :attr:`idx` 0 if present and any other "
"placeholders will follow in sequence, top to bottom and left to right. A "
"placeholder added to a slide layout by a user in PowerPoint will receive "
"an :attr:`idx` value starting at 10."
msgstr ""
"通常，内置幻灯片布局（PowerPoint 提供的）占位符的 :attr:`idx` 值将在 0 到 5 之间。"
"title 占位符将始终具有 :attr:`idx` 0 (如果存在的话)，任何其他占位符将按照从上到下、从左到右的顺序跟随。"
"在 PowerPoint 中，用户添加到幻灯片布局中的占位符将接收从 10 开始的 :attr:`idx` 值。"

#: ../../user/placeholders-using.rst:67
msgid "Identify and Characterize a placeholder"
msgstr "确定并描述占位符的特征"

#: ../../user/placeholders-using.rst:69
msgid ""
"A placeholder behaves differently that other shapes in some ways. In "
"particular, the value of its :attr:`~.BaseShape.shape_type` attribute is "
"unconditionally ``MSO_SHAPE_TYPE.PLACEHOLDER`` regardless of what type of"
" placeholder it is or what type of content it contains::"
msgstr ""
"占位符在某些方面的行为与其他形状不同。"
"特别是，它的 :attr:`~.BaseShape.shape_type` 属性的值无条件地是 ``MSO_SHAPE_TYPE.PLACEHOLDER`` 不管它是什么类型的占位符或者它包含什么类型的内容::"

#: ../../user/placeholders-using.rst:83
msgid ""
"To find out more, it's necessary to inspect the contents of the "
"placeholder's :attr:`~.BaseShape.placeholder_format` attribute. All "
"shapes have this attribute, but accessing it on a non-placeholder shape "
"raises |ValueError|. The :attr:`~.BaseShape.is_placeholder` attribute can"
" be used to determine whether a shape is a placeholder::"
msgstr ""
"要想了解更多，有必要检查占位符的 :attr:`~.BaseShape.placeholder_format` 属性内容。"
"所有形状都有这个属性，但是在非占位符形状上访问它会引发 |ValueError|。"
":attr:`~.BaseShape.is_placeholder` 可以用来确定形状是否为占位符::"

#: ../../user/placeholders-using.rst:98
msgid ""
"Another way a placeholder acts differently is that it inherits its "
"position and size from its layout placeholder. This inheritance is "
"overridden if the position and size of a placeholder are changed."
msgstr ""
"占位符的另一种不同行为是，它从布局占位符继承其位置和大小。如果占位符的位置和大小被更改，这个继承将被重写。"

#: ../../user/placeholders-using.rst:104
msgid "Insert content into a placeholder"
msgstr "将内容插入到占位符"

#: ../../user/placeholders-using.rst:106
msgid ""
"Certain placeholder types have specialized methods for inserting content."
" In the current release, the `picture`, `table`, and `chart` placeholders"
" have content insertion methods. Text can be inserted into `title` and "
"`body` placeholders in the same way text is inserted into an auto shape."
msgstr ""
"某些占位符类型具有插入内容的专用方法。"
"在当前版本中， `picture`、`table` 和 `chart` 占位符都有内容插入方法。"
"文本可以插入到 `title` 和 `body` 占位符中，就像文本插入到自动形状中一样。"

#: ../../user/placeholders-using.rst:112
msgid ":meth:`.PicturePlaceholder.insert_picture`"
msgstr ""

#: ../../user/placeholders-using.rst:114
msgid ""
"The picture placeholder has an "
":meth:`~.PicturePlaceholder.insert_picture` method::"
msgstr ""
"picture 占位符有 :meth:`~.PicturePlaceholder.insert_picture` 方法"

#: ../../user/placeholders-using.rst:126
msgid ""
"A reference to a picture placeholder becomes invalid after its "
":meth:`~.PicturePlaceholder.insert_picture` method is called. This is "
"because the process of inserting a picture replaces the original `p:sp` "
"XML element with a new `p:pic` element containing the picture. Any "
"attempt to use the original placeholder reference after the call will "
"raise |AttributeError|. The new placeholder is the return value of the "
":meth:`insert_picture` call and may also be obtained from the "
"placeholders collection using the same `idx` key."
msgstr ""
"对图片占位符的引用在其 :meth:`~.PicturePlaceholder.insert_picture` 方法调用后后失效。"
"这是因为插入图片的过程用包含图片的新 `p:pic` 元素替换了原始的 `p:sp` XML 元素。"
"调用之后，任何使用原始占位符引用的尝试都将引发 |AttributeError|。"
"新的占位符是 :meth:`insert_picture` 调用的返回值，也可以使用相同的 `idx` 键从占位符集合中获取。"

#: ../../user/placeholders-using.rst:135
msgid ""
"A picture inserted in this way is stretched proportionately and cropped "
"to fill the entire placeholder. Best results are achieved when the aspect"
" ratio of the source image and placeholder are the same. If the picture "
"is taller in aspect than the placeholder, its top and bottom are cropped "
"evenly to fit. If it is wider, its left and right sides are cropped "
"evenly. Cropping can be adjusted using the crop properties on the "
"placeholder, such as :attr:`~.PlaceholderPicture.crop_bottom`."
msgstr ""
"以这种方式插入的图片会按比例拉伸和裁剪，以填满整个占位符。"
"当源图像和占位符的长宽比相同时，效果最好。"
"如果图片在外观上比占位符高，那么它的顶部和底部将被均匀地裁剪以适应。"
"如果它更宽，它的左右两边被均匀地裁剪。可以使用占位符上的作物属性来调整裁剪，例如 :attr:`~.PlaceholderPicture.crop_bottom`。"

#: ../../user/placeholders-using.rst:144
msgid ":meth:`.TablePlaceholder.insert_table`"
msgstr ""

#: ../../user/placeholders-using.rst:146
msgid ""
"The table placeholder has an :meth:`~.TablePlaceholder.insert_table` "
"method. The built-in template has no layout containing a table "
"placeholder, so this example assumes a starting presentation named "
"``having-table-placeholder.pptx`` having a table placeholder with idx 10 "
"on its second slide layout::"
msgstr ""
"表格占位符有 :meth:`~.TablePlaceholder.insert_table` 方法。"
"内置模板没有包含表占位符的布局，所以这个例子假设名为 ``having-table-placeholder.pptx`` 的演示文稿的第二个幻灯片布局上有 idx 10 的表格占位符::"

#: ../../user/placeholders-using.rst:164
msgid ""
"A table inserted in this way has the position and width of the original "
"placeholder. Its height is proportional to the number of rows."
msgstr "以这种方式插入的表格具有原始占位符的位置和宽度。它的高度与行数成正比。"

#: ../../user/placeholders-using.rst:167
msgid ""
"Like all rich-content insertion methods, a reference to a table "
"placeholder becomes invalid after its "
":meth:`~.TablePlaceholder.insert_table` method is called. This is because"
" the process of inserting rich content replaces the original `p:sp` XML "
"element with a new element, a `p:graphicFrame` in this case, containing "
"the rich-content object. Any attempt to use the original placeholder "
"reference after the call will raise |AttributeError|. The new placeholder"
" is the return value of the :meth:`insert_table` call and may also be "
"obtained from the placeholders collection using the original `idx` key, "
"10 in this case."
msgstr ""
"像所有的富内容插入方法一样，对表格占位符的引用在其 :meth:`~.TablePlaceholder.insert_table` 方法调用之后就会失效。"
"这是因为插入富内容的过程将原始的 `p:sp`  XML 元素替换为包含富内容对象的新元素(本例中为 `p:graphicFrame`)。"
"调用之后，任何使用原始占位符引用的尝试都将引发 |AttributeError|。"
"新的占位符是 :meth:`insert_table` 调用的返回值，也可以从占位符集合中使用原来的 `idx` 键获得，在本例中为 10。"

#: ../../user/placeholders-using.rst:177
msgid ""
"The return value of the :meth:`~.TablePlaceholder.insert_table` method is"
" a |PlaceholderGraphicFrame| object, which has all the properties and "
"methods of a |GraphicFrame| object along with those specific to "
"placeholders. The inserted table is contained in the graphic frame and "
"can be obtained using its :attr:`~.PlaceholderGraphicFrame.table` "
"property."
msgstr ""
":meth:`~.TablePlaceholder.insert_table` 方法的返回值是 |GraphicFrame| 对象，它拥有 |GraphicFrame| 对象的所有属性和方法，以及那些特定于占位符的。"
"插入的表格包含在图形框架中，可以使用 :attr:`~.PlaceholderGraphicFrame.table` 来获取。"

#: ../../user/placeholders-using.rst:184
msgid ":meth:`.ChartPlaceholder.insert_chart`"
msgstr ""

#: ../../user/placeholders-using.rst:186
msgid ""
"The chart placeholder has an :meth:`~.ChartPlaceholder.insert_chart` "
"method. The presentation template built into |pp| has no layout "
"containing a chart placeholder, so this example assumes a starting "
"presentation named ``having-chart-placeholder.pptx`` having a chart "
"placeholder with idx 10 on its second slide layout::"
msgstr ""
"图表占位符有 :meth:`~.ChartPlaceholder.insert_chart` 方法。"
"内置到 |pp| 中的演示模板没有包含图表占位符的布局，所以这个例子假设名为 ``having-chart-placeholder.pptx`` 的开始演示在其第二个幻灯片布局中有 idx 10 的图表占位符::"

#: ../../user/placeholders-using.rst:213
msgid ""
"A chart inserted in this way has the position and size of the original "
"placeholder."
msgstr "以这种方式插入的图表具有原始占位符的位置和大小。"

#: ../../user/placeholders-using.rst:216
msgid ""
"Note the return value from :meth:`~.ChartPlaceholder.insert_chart` is a "
"|PlaceholderGraphicFrame| object, not the chart itself. A "
"|PlaceholderGraphicFrame| object has all the properties and methods of a "
"|GraphicFrame| object along with those specific to placeholders. The "
"inserted chart is contained in the graphic frame and can be obtained "
"using its :attr:`~.PlaceholderGraphicFrame.chart` property."
msgstr ""
"注意 :meth:`~.ChartPlaceholder.insert_chart` 返回值是 |PlaceholderGraphicFrame| 对象，而不是图表本身。"
"|PlaceholderGraphicFrame| 对象具有 |GraphicFrame| 对象的所有属性和方法，以及那些特定于占位符的。"\
"插入的图表包含在图形框架中，可以使用其 :attr:`~.PlaceholderGraphicFrame.chart` 属性获取。"

#: ../../user/placeholders-using.rst:223
msgid ""
"Like all rich-content insertion methods, a reference to a chart "
"placeholder becomes invalid after its "
":meth:`~.ChartPlaceholder.insert_chart` method is called. This is because"
" the process of inserting rich content replaces the original `p:sp` XML "
"element with a new element, a `p:graphicFrame` in this case, containing "
"the rich-content object. Any attempt to use the original placeholder "
"reference after the call will raise |AttributeError|. The new placeholder"
" is the return value of the :meth:`insert_chart` call and may also be "
"obtained from the placeholders collection using the original `idx` key, "
"10 in this case."
msgstr ""
"像所有富内容插入方法一样，对图表占位符的引用在其 :meth:`~.ChartPlaceholder.insert_chart` 方法被调用后失效。"
"这是因为插入富内容的过程将原始的 `p:sp` XML 元素替换为包含富内容对象的新元素(本例中为 `p:graphicFrame`)。"
"调用之后，任何使用原始占位符引用的尝试都将引发 |AttributeError|。"
"新的占位符是 :meth:`insert_chart` 调用的返回值，也可以使用原始的 `idx` 键从占位符集合中获取，在本例中为 10。"

#: ../../user/placeholders-using.rst:235
msgid "Setting the slide title"
msgstr "设置幻灯片标题"

#: ../../user/placeholders-using.rst:237
msgid ""
"Almost all slide layouts have a title placeholder, which any slide based "
"on the layout inherits when the layout is applied. Accessing a slide's "
"title is a common operation and there's a dedicated attribute on the "
"shape tree for it::"
msgstr ""
"几乎所有的幻灯片布局都有标题占位符，当布局被应用时，任何基于布局的幻灯片都会继承这个占位符。"
"访问幻灯片标题是一种常见操作，它在形状树中有专门的属性::"
