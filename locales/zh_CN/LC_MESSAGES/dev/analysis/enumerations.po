# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, 2013, Steve Canny
# This file is distributed under the same license as the python-pptx
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: python-pptx 0.6.21\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-29 20:05+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../dev/analysis/enumerations.rst:3
msgid "Enumerations"
msgstr ""

#: ../../dev/analysis/enumerations.rst:6
msgid "Overview"
msgstr ""

#: ../../dev/analysis/enumerations.rst:8
msgid ""
"A large number of settings in PowerPoint are a selection between a small,"
" finite set of discrete choices. Often, in the XML, these are represented"
" by a simple type defined as an enumeration of a set of short string "
"values. This page describes the strategy for providing access to these "
"sets of values in the various parts of the library that require them."
msgstr ""

#: ../../dev/analysis/enumerations.rst:16
msgid "Notes"
msgstr ""

#: ../../dev/analysis/enumerations.rst:18
msgid ""
"The general strategy is to provide a set of classes, one for each "
"enumeration, that serves as the single source for all reference and "
"behavior for that enumeration."
msgstr ""

#: ../../dev/analysis/enumerations.rst:21
msgid "These enumerations correspond one-to-one with Microsoft API enumerations."
msgstr ""

#: ../../dev/analysis/enumerations.rst:22
msgid ""
"The naming is based on the Microsoft enumeration. .. all-caps snake case "
"from the original mixed-case."
msgstr ""

#: ../../dev/analysis/enumerations.rst:27
msgid "Definitions"
msgstr ""

#: ../../dev/analysis/enumerations.rst:31
msgid "member"
msgstr ""

#: ../../dev/analysis/enumerations.rst:30
msgid ""
"What constitutes a member of an enumeration? What attributes do all "
"members have in common?"
msgstr ""

#: ../../dev/analysis/enumerations.rst:34
msgid "out-of-band member"
msgstr ""

#: ../../dev/analysis/enumerations.rst:34
msgid "Is there such a thing? Or is there just an out-of-band value?"
msgstr ""

#: ../../dev/analysis/enumerations.rst:37
msgid "get-value"
msgstr ""

#: ../../dev/analysis/enumerations.rst:37
msgid "... value returned to indicate the current state of a property"
msgstr ""

#: ../../dev/analysis/enumerations.rst:41
msgid "set-value"
msgstr ""

#: ../../dev/analysis/enumerations.rst:40
msgid "... value passed to indicate the desired state of a property"
msgstr ""

#: ../../dev/analysis/enumerations.rst:44
msgid "Feature requirements"
msgstr ""

#: ../../dev/analysis/enumerations.rst:46
msgid ""
"Design principle: All required values and mappings are defined in the "
"enumeration class. All required names, data structures, and methods are "
"generated by the metaclass. They don't have to be generated manually."
msgstr ""

#: ../../dev/analysis/enumerations.rst:50
msgid "[X] feature: dotted name access"
msgstr ""

#: ../../dev/analysis/enumerations.rst:52
msgid ""
"enumeration values can be accessed from an enumeration class with dotted "
"notation, e.g. ``MSO_FOO.BAR_BAZ``"
msgstr ""

#: ../../dev/analysis/enumerations.rst:55
msgid "[X] feature: enumeration value behaves as an int"
msgstr ""

#: ../../dev/analysis/enumerations.rst:57
msgid "[X] feature: __str__ value of enum member is the member name and int value"
msgstr ""

#: ../../dev/analysis/enumerations.rst:59
msgid ""
"In order to provide the developer with a directly readable name for an "
"enumeration value (rather than a raw int), each enum values shall have a "
"__str__ method that returns the member name. E.g.::"
msgstr ""

#: ../../dev/analysis/enumerations.rst:66
msgid "[X] feature: out-of-band values -- like None, True, and False"
msgstr ""

#: ../../dev/analysis/enumerations.rst:68
msgid ""
"From time to time it is desireable to allow return and setting values "
"that are not named members of the enumeration to provide a more Pythonic "
"protocol for a property that uses the enumeration. For example::"
msgstr ""

#: ../../dev/analysis/enumerations.rst:85
msgid "[X] feature: alias decorator"
msgstr ""

#: ../../dev/analysis/enumerations.rst:87
msgid ""
"one or more convenience aliases can be declared for an Enumeration "
"subclass by use of an @alias decorator"
msgstr ""

#: ../../dev/analysis/enumerations.rst:90
msgid "[X] feature: setting validation"
msgstr ""

#: ../../dev/analysis/enumerations.rst:92
msgid ""
"In order to allow invalid input values to raise ValueError exceptions at "
"the API method level, the enumeration shall provide an is_valid_setting()"
" class method that returns False if the value passed as an argument is "
"not a member of the enumeration. E.g.::"
msgstr ""

#: ../../dev/analysis/enumerations.rst:99
msgid "[X] feature: to_XML translation"
msgstr ""

#: ../../dev/analysis/enumerations.rst:103
msgid "[X] issue: Not all enumerations have mappings to XML attribute values."
msgstr ""

#: ../../dev/analysis/enumerations.rst:102
msgid ""
"Consider creating an XmlEnumeration subclass that provides this extra "
"feature."
msgstr ""

#: ../../dev/analysis/enumerations.rst:123
msgid "[X] issue: There exist 'return-only' enumeration values, out-of-band"
msgstr ""

#: ../../dev/analysis/enumerations.rst:106
msgid ""
"values used to indicate none of the other values apply, for example MIXED"
" = -2 to indicate the call was made on a range that contains items not "
"all having the same value."
msgstr ""

#: ../../dev/analysis/enumerations.rst:110
msgid ""
"To provide a single authoritative mapping from enumeration member values "
"and the XML attribute values they correspond to, the Enumeration class "
"shall provide a to_xml(member_value) method that returns the XML value "
"corresponding to the passed member value."
msgstr ""

#: ../../dev/analysis/enumerations.rst:115
msgid ""
"The method shall raise ValueError if the passed value is not a member of "
"the enumeration."
msgstr ""

#: ../../dev/analysis/enumerations.rst:118
msgid ""
"The special XML value |None| indicates the attribute should be removed "
"altogether and should be returned where that is the appropriate behavior."
msgstr ""

#: ../../dev/analysis/enumerations.rst:122
msgid ""
"Where the Python value is an out-of-band value such as |None|, |True|, or"
" |False|, there must be a valid XML value or |None| as the mapping."
msgstr ""

#: ../../dev/analysis/enumerations.rst:125
msgid "[X] feature: docstrings"
msgstr ""

#: ../../dev/analysis/enumerations.rst:127
msgid ""
"To provide built-in documentation for different options and to provide a "
"source for option descriptions for a generated documentation page, each "
"enumeration member shall have as its docstring a description of the "
"member and the behavior that setting specifies in its context."
msgstr ""

#: ../../dev/analysis/enumerations.rst:132
msgid "[X] feature: auto-generate documentation"
msgstr ""

#: ../../dev/analysis/enumerations.rst:134
msgid "[X] add __ms_name__ var => 'MsoAutoSize'"
msgstr ""

#: ../../dev/analysis/enumerations.rst:135
msgid "[X] add __url__ var => 'http:// ...'"
msgstr ""

#: ../../dev/analysis/enumerations.rst:137
msgid ""
"In order to provide single-source for both code and documentation, the "
"Enumeration class shall provide a documentation page generation method "
"that generates Sphinx RST source for a documentation page for the "
"enumeration. This page source shall be available as either the docstring "
"(__doc__) value of the class or its __str__ value. The supplied docstring"
" shall be pre-pended to the generated portion after the top matter such "
"as page title and reference link are generated."
msgstr ""

#: ../../dev/analysis/enumerations.rst:145
msgid "[X] convert all existing enums to new type to make sure they all work"
msgstr ""

#: ../../dev/analysis/enumerations.rst:147
msgid "[X] MSO_AUTO_SIZE"
msgstr ""

#: ../../dev/analysis/enumerations.rst:148
msgid "[X] MSO_VERTICAL_ANCHOR (__init__ -> enum.text)"
msgstr ""

#: ../../dev/analysis/enumerations.rst:149
msgid "[X] MSO_FILL_TYPE (__init__ -> enum.dml)"
msgstr ""

#: ../../dev/analysis/enumerations.rst:150
msgid "[X] MSO_COLOR_TYPE (__init__ -> enum.dml)"
msgstr ""

#: ../../dev/analysis/enumerations.rst:151
msgid "[X] others ..."
msgstr ""

#: ../../dev/analysis/enumerations.rst:152
msgid "[>] PP_PARAGRAPH_ALIGNMENT (constants -> enum.text)"
msgstr ""

#: ../../dev/analysis/enumerations.rst:153
msgid "[X] TEXT_ALIGN_TYPE (constants -> delete)"
msgstr ""

#: ../../dev/analysis/enumerations.rst:154
msgid "[X] TEXT_ANCHORING_TYPE (constants -> delete)"
msgstr ""

#: ../../dev/analysis/enumerations.rst:155
msgid "[X] MSO_SHAPE_TYPE (constants.MSO -> enum.shapes.MSO_SHAPE_TYPE)"
msgstr ""

#: ../../dev/analysis/enumerations.rst:156
msgid "[X] MSO.ANCHOR_* (constants -> MSO_VERTICAL_ANCHOR)"
msgstr ""

#: ../../dev/analysis/enumerations.rst:157
msgid "[X] PP_PLACEHOLDER_TYPE: PH_TYPE_* in spec.py PpPlaceholderType"
msgstr ""

#: ../../dev/analysis/enumerations.rst:158
msgid "[X] ST_Direction: PH_ORIENT_*"
msgstr ""

#: ../../dev/analysis/enumerations.rst:159
msgid "[X] ST_PlaceholderSize: PH_SZ_*"
msgstr ""

#: ../../dev/analysis/enumerations.rst:160
msgid "[X] MSO_AUTO_SHAPE_TYPE (constants -> enum.shapes)"
msgstr ""

#: ../../dev/analysis/enumerations.rst:161
msgid "[X] What is pml_parttypes doing in spec? I thought that went a long time"
msgstr ""

#: ../../dev/analysis/enumerations.rst:162
msgid "ago? must be dead code now."
msgstr ""

#: ../../dev/analysis/enumerations.rst:163
msgid "[X] fix all enum references in documentation"
msgstr ""

#: ../../dev/analysis/enumerations.rst:164
msgid "[X] adjust all examples that use enum or constants"
msgstr ""

#: ../../dev/analysis/enumerations.rst:165
msgid "[X] spec: pretty sure default content types belong in opc somewhere"
msgstr ""

#: ../../dev/analysis/enumerations.rst:168
msgid ""
"[ ] ... starting to think that combining to_xml() and from_xml() into "
"enums"
msgstr ""

#: ../../dev/analysis/enumerations.rst:168
msgid "is not the best idea:"
msgstr ""

#: ../../dev/analysis/enumerations.rst:173
msgid "[ ] There are two separate concerns: (1) provide a symbolic reference for"
msgstr ""

#: ../../dev/analysis/enumerations.rst:171
msgid ""
"use in the API to specify an enumerated option. (2) provide one of "
"potentially several mappings between that value and values in different "
"domains."
msgstr ""

#: ../../dev/analysis/enumerations.rst:177
msgid "[ ] could create custom Enumeration subclasses to accommodate special"
msgstr ""

#: ../../dev/analysis/enumerations.rst:176
msgid "cases where there are mappings beyond to and from an XML attribute value."
msgstr ""

#: ../../dev/analysis/enumerations.rst:180
msgid "[ ] could create value objects that perhaps encapsulate those mappings."
msgstr ""

#: ../../dev/analysis/enumerations.rst:180
msgid "I suppose that's what Enumeration is now."
msgstr ""

#: ../../dev/analysis/enumerations.rst:189
msgid "[X] issue: does to/from XML translation replace an ST_* class in oxml?"
msgstr ""

#: ../../dev/analysis/enumerations.rst:183
msgid ""
"(Probably can't fully replace, need validation and other bits as well. "
"Might be best to wait until a few examples have accumulated.)"
msgstr ""

#: ../../dev/analysis/enumerations.rst:186
msgid ""
"In order to support DRY translation between enumeration values and XML "
"simple type (ST_*) attribute values, the Enumeration class shall provide "
"both to_xml(enum_value) and from_xml(attr_value) methods where "
"enumeration values map to XML attribute values."
msgstr ""

#: ../../dev/analysis/enumerations.rst:196
msgid "[ ] issue: how handle case where more than one XML to name mapping is"
msgstr ""

#: ../../dev/analysis/enumerations.rst:192
msgid ""
"possible? Like both True and SINGLE set underline to 'single'? Where if "
"anywhere does that cause a conflict?"
msgstr ""

#: ../../dev/analysis/enumerations.rst:195
msgid ""
"The other direction of this is when more than one XML value should map to"
" None."
msgstr ""

#: ../../dev/analysis/enumerations.rst:207
msgid "[ ] issue: how add clsdict._xml_to_member dict unconditionally to"
msgstr ""

#: ../../dev/analysis/enumerations.rst:199
msgid ""
"subclasses of XmlEnumeration? use __init__ instead of __new__ for that "
"part::"
msgstr ""

#: ../../dev/analysis/enumerations.rst:205
msgid "init time might be too late, no handy ref to metaclass?"
msgstr ""

#: ../../dev/analysis/enumerations.rst:206
msgid ""
"could catch __new__ on separate XmlMappedEnumMember metaclass and add the"
" attribute(s) then."
msgstr ""

#: ../../dev/analysis/enumerations.rst:209
msgid "[ ] deprecate prior versions:"
msgstr ""

#: ../../dev/analysis/enumerations.rst:211
msgid "[ ] MSO_VERTICAL_ANCHOR from enum/__init__.py"
msgstr ""

#: ../../dev/analysis/enumerations.rst:214
msgid "[ ] consider adding a feature whereby aliases can be defined for an enum"
msgstr ""

#: ../../dev/analysis/enumerations.rst:214
msgid "member name"
msgstr ""

#: ../../dev/analysis/enumerations.rst:217
msgid "[ ] consider what requirements an ST_* enumeration might have, aside from"
msgstr ""

#: ../../dev/analysis/enumerations.rst:217
msgid "or in addition to an API enumeration"
msgstr ""

#: ../../dev/analysis/enumerations.rst:220
msgid "[ ] need a page or whatever in the user guide to talk about how fills are"
msgstr ""

#: ../../dev/analysis/enumerations.rst:220
msgid "applied and give example code"
msgstr ""

#: ../../dev/analysis/enumerations.rst:224
msgid "[ ] how could enumeration documentation be generated automatically from"
msgstr ""

#: ../../dev/analysis/enumerations.rst:223
msgid "enumerations as part of the Sphinx run?"
msgstr ""

#: ../../dev/analysis/enumerations.rst:227
msgid "Code Sketches"
msgstr ""

#: ../../dev/analysis/enumerations.rst:229
msgid "enabling an @alias decorator to define aliases for an enumeration class::"
msgstr ""

